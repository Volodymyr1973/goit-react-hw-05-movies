{"version":3,"file":"static/js/938.4b0df023.chunk.js","mappings":"6LAmFA,UA9EqB,WACnB,IAAMA,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOI,UAC/B,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KAEAC,QAAQC,IAAIT,EAAOI,UACnBI,QAAQC,IAAIP,GACZM,QAAQC,IAAIH,GAyBZ,OANAI,EAAAA,EAAAA,YAAU,WACRF,QAAQC,IAAI,GAZZE,MAAM,GAAD,OALW,gCAKX,iBAAsBT,EAAtB,oBANU,mCAMV,oBACFU,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIZ,EAAcY,EAAlB,IACZC,OAAM,SAAAC,GAAK,OAAIb,QAAQC,IAAIY,EAAhB,GAOf,GAAE,KAGD,+BACGf,IACC,4BACE,gBACEgB,IAAG,0CAAqChB,EAAWiB,aACnDC,IAAKlB,EAAWmB,SAElB,yBACGnB,EAAWmB,MACXnB,EAAWoB,cACV,iCAASpB,EAAWoB,aAAaC,MAAM,EAAG,GAA1C,QAEA,0CAGJ,wCACexB,OAAOyB,SAAmC,GAA1BtB,EAAWuB,cAD1C,SAGA,qCACYvB,EAAWwB,aAEvB,mCAEGxB,EAAWyB,OAAOC,KAAI,SAAAC,GAAK,OAC1B,gCAAQA,EAAMC,KAAd,MAD0B,WAMlC,2BACE,yBAAI,SAAC,KAAD,CAAMC,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAKJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,sCAApB,UACI,SAAC,KAAD,QAMX,C","sources":["page/MovieDetails.js"],"sourcesContent":["import { Link, Outlet, useParams } from 'react-router-dom';\n// import { Cast } from '../components/cast/Cast';\n// import { Reviews } from 'components/reviews/Reviews';\nimport { useState, useEffect, Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmDetail, setFilmDetail] = useState();\n\n  console.log(params.moviesId);\n  console.log(paramsId);\n  console.log(filmDetail);\n\n  const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\n  const originUrl = 'https://api.themoviedb.org/3/';\n\n  // const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const searchFilmById = () => {\n    fetch(`${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFilmDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    console.log(3);\n    searchFilmById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      {filmDetail && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${filmDetail.poster_path}`}\n            alt={filmDetail.title}\n          />\n          <p>\n            {filmDetail.title}\n            {filmDetail.release_date ? (\n              <span> ({filmDetail.release_date.slice(0, 4)})</span>\n            ) : (\n              <span> (----)</span>\n            )}\n          </p>\n          <p>\n            User score: {Number.parseInt(filmDetail.vote_average * 10)} &#37;\n          </p>\n          <p>\n            Overview:{filmDetail.overview}\n          </p>\n          <p>\n            Genres:\n            {filmDetail.genres.map(genre => (\n              <span> {genre.name} </span>\n            ))}\n          </p>\n        </div>\n      )}\n      <ul>\n        <li><Link to=\"cast\">Cast</Link></li>\n        <li><Link to=\"reviews\">Reviews</Link></li>\n      </ul>\n\n      {/* <Cast />\n        <Reviews /> */}\n        <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n        </Suspense>\n    \n      \n    </section>\n  );\n};\n\nexport default MovieDetails;"],"names":["params","useParams","paramsId","Number","moviesId","useState","filmDetail","setFilmDetail","console","log","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","src","poster_path","alt","title","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","to","Suspense","fallback"],"sourceRoot":""}