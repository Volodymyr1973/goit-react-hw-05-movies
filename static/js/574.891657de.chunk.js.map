{"version":3,"file":"static/js/574.891657de.chunk.js","mappings":"oOACA,EAAuB,mBAAvB,EAAiD,mB,SCsCjD,EAhCa,WACX,IAAMA,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOI,UAC/B,GAAgDC,EAAAA,EAAAA,YAAhD,eAAOC,EAAP,KAAyBC,EAAzB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAW,UAAWP,GAAUQ,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAAoBI,EAAhC,IAAuCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAExF,GAAE,KAGC,6BACCP,IACD,eAAIU,UAAWC,EAAf,SACGX,EAAiBY,KAAKC,KAAI,SAAAC,GAAI,OAC7B,gBAAkBJ,UAAWC,EAA7B,UACGG,EAAKC,cAAe,gBACnBC,IAAG,0CAAqCF,EAAKC,cAC7CE,IAAKH,EAAKI,iBACP,gBAAKF,IAAKG,EAAOF,IAAI,aAE1B,uBAAIH,EAAKI,iBACT,uCAAeJ,EAAKM,eAPbN,EAAKO,GADe,OAgBtC,C,+ECrCM,IAAMC,EAAW,mCAEXC,EAAe,kC,mICA5B,E,OAAeC,EAAAA,OAAa,CAC1BC,QAAQ,kC,SCCItB,EAAa,SAACuB,EAAO9B,GACjC,IAAM+B,EAAM,gBAAY/B,EAAZ,YAAwB8B,EAAxB,oBAAyCJ,EAAAA,GAAzC,mBACZ,OAAOM,EAAAA,IAAQD,EAEd,EAEYE,EAAY,WAEzB,IAAMF,EAAM,sCAAkCL,EAAAA,GAAlC,mBACZ,OAAOM,EAAAA,IAAQD,EAEd,EAEWG,EAAiB,SAAClC,GAE9B,IAAM+B,EAAM,gBAAY/B,EAAZ,oBAAgC0B,EAAAA,GAAhC,mBACZ,OAAOM,EAAAA,IAAQD,EAEd,EAEYI,EAAmB,SAACC,GAE/B,IAAML,EAAM,+BAA2BL,EAAAA,GAA3B,kBAA6CU,EAA7C,mBACZ,OAAOJ,EAAAA,IAAQD,EAGhB,C","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.js","components/constants/Constants.js","components/Api.js","components/fetch/Fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__tTjpY\",\"item\":\"Cast_item__rvFp8\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SearchFilm } from 'components/fetch/Fetch';\nimport Image from '../image/NoFoto.jpg';\nimport css from './Cast.module.css'\n\n\nconst Cast = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmCreditDetail, setFilmCreditDetail] = useState();\n\n  useEffect(() => {\n    SearchFilm(\"credits\", paramsId).then(({data}) => setFilmCreditDetail(data)).catch(error => console.log(error));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n      <section>\n      {filmCreditDetail &&\n      <ul className={css.list}>\n        {filmCreditDetail.cast.map(hero => (\n          <li key={hero.id} className={css.item}>\n            {hero.profile_path ? <img\n              src={`https://image.tmdb.org/t/p/w500/${hero.profile_path}`}\n              alt={hero.original_name}\n            /> : <img src={Image} alt=\"No foto\"/>}\n            \n            <p>{hero.original_name}</p>\n            <p>Character: {hero.character}</p>\n          </li>\n        ))}\n      </ul>\n}\n    </section>\n      \n  );\n};\n\nexport default Cast;","export const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\nexport const originUrl = 'https://api.themoviedb.org/3/';\nexport const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `https://api.themoviedb.org/3/`\n});","// import axios from 'axios';\nimport API from '../Api'\nimport { KEY_FILM } from '../constants/Constants';\n \n export const SearchFilm = (value, paramsId ) => {\n  const apiUrl = `movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl);\n\n  };\n\n export  const trendFilm = () => {\n    \n  const apiUrl = `trending/movie/week?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl)\n  \n  };\n\n export const searchFilmById = (paramsId) => {\n\n  const apiUrl = `movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl)\n  \n  };\n\n  export const searchFilmByName = (name) => {\n\n    const apiUrl = `search/movie?api_key=${KEY_FILM}&query=${name}&language=en-US`;\n    return API.get(apiUrl);\n  \n\n  };"],"names":["params","useParams","paramsId","Number","moviesId","useState","filmCreditDetail","setFilmCreditDetail","useEffect","SearchFilm","then","data","catch","error","console","log","className","css","cast","map","hero","profile_path","src","alt","original_name","Image","character","id","KEY_FILM","baseImageUrl","axios","baseURL","value","apiUrl","API","trendFilm","searchFilmById","searchFilmByName","name"],"sourceRoot":""}