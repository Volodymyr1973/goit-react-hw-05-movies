{"version":3,"file":"static/js/787.87519644.chunk.js","mappings":"qKAAO,IAAMA,EAAa,SAACC,EAAOC,EAAUC,GAKxCC,MAAM,GAAD,OAHa,gCAGb,iBACkBF,EADlB,YAC8BD,EAD9B,oBAJY,mCAIZ,oBAGFI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIT,EAAOS,EAAX,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,C,6ECqBH,UAjCgB,WACd,IAAMG,GAASC,EAAAA,EAAAA,MACThB,EAAWiB,OAAOF,EAAOG,UAC/B,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAXAR,QAAQC,IAAIC,EAAOG,UACnBL,QAAQC,IAAId,GACZa,QAAQC,IAAIM,IAIZE,EAAAA,EAAAA,YAAU,YACPxB,EAAAA,EAAAA,GAAW,UAAWE,EAAUqB,EAElC,GAAE,KAID,6BACGD,IAAe,yBACZA,EAAYV,UAAW,GAAKU,EAAYV,QAAQa,KAAI,SAAAC,GAAM,OAC1D,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAD0C,KAKvD,uEAKZ,C","sources":["components/fetch/Fetch.js","components/reviews/Reviews.js"],"sourcesContent":["export const SearchFilm = (value, paramsId, setFoo) => {\n    const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\n    const originUrl = 'https://api.themoviedb.org/3/';\n\n\n    fetch(\n      `${originUrl}movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFoo(results))\n      .catch(error => console.log(error));\n      \n  };","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SearchFilm } from \"components/fetch/Fetch\";\n\n\nconst Reviews = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmReviews, setFilmReviews] = useState();\n  \n\n  console.log(params.moviesId);\n  console.log(paramsId);\n  console.log(filmReviews);\n\n\n  \n  useEffect(() => {\n     SearchFilm(\"reviews\", paramsId, setFilmReviews);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n  // <p>rev</p>\n    <section>\n      {filmReviews && <ul>\n        {!filmReviews.results ===[] ? filmReviews.results.map(result => (\n          <li key={result.id}>\n            <p>{result.author}</p>\n            <p>{result.content}</p>\n          </li>\n        )) : <p>We don't have any reviews for this movie</p>}\n      </ul>}\n      \n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["SearchFilm","value","paramsId","setFoo","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","console","log","params","useParams","Number","moviesId","useState","filmReviews","setFilmReviews","useEffect","map","result","author","content","id"],"sourceRoot":""}