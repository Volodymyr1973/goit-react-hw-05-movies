{"version":3,"file":"static/js/534.25c7c47b.chunk.js","mappings":"4OAWA,EARiB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MAEb,OADJC,QAAQC,IAAIH,IAEJ,SAAC,KAAD,CAAMI,GAAIJ,EAASK,MAAMC,KAAzB,qBAEP,EC4ED,EA9EqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOI,UAC/B,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACMd,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASK,OAyBrB,OALAU,EAAAA,EAAAA,YAAU,WAXRC,MAAM,GAAD,OAJW,gCAIX,iBAAsBP,EAAtB,oBALU,mCAKV,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIV,EAAcU,EAAlB,IACZC,OAAM,SAAAC,GAAK,OAAIxB,QAAQC,IAAIuB,EAAhB,GAMf,GAAE,KAGD,gCACE,SAAC,EAAD,IACCb,IACC,2BACGA,EAAWc,aAAc,gBACxBC,IAAG,UAzBQ,oCAyBR,OAAoBf,EAAWc,aAClCE,IAAKhB,EAAWiB,SACZ,gBAAKF,IAAKG,EAAOF,IAAI,aAE3B,yBACGhB,EAAWiB,MACXjB,EAAWmB,cACV,iCAASnB,EAAWmB,aAAaC,MAAM,EAAG,GAA1C,QAEA,0CAGJ,wCACevB,OAAOwB,SAAmC,GAA1BrB,EAAWsB,cAD1C,SAGA,qCACYtB,EAAWuB,aAEvB,mCAEGvB,EAAWwB,OAAOC,KAAI,SAAAC,GAAK,OAC1B,gCAAQA,EAAMC,KAAd,MAD0B,WAMlC,2BACE,yBAAI,SAAC,KAAD,CAAMpC,GAAG,OAAOC,MAAO,CAACC,KAAMN,EAASK,MAAMC,MAA7C,qBACJ,yBAAI,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAACC,KAAMN,EAASK,MAAMC,MAAhD,2BAKJ,SAAC,EAAAmC,SAAD,CAAUC,UAAU,sCAApB,UACI,SAAC,KAAD,QAMX,C","sources":["components/backlink/BackLink.js","page/MovieDetails.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\n\nconst BackLink = () => {\nconst location = useLocation();\nconsole.log(location)\n    return (\n        <Link to={location.state.from}> Go back</Link>\n    )\n}\n\nexport default BackLink;","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n// import { Cast } from '../components/cast/Cast';\n// import { Reviews } from 'components/reviews/Reviews';\nimport { useState, useEffect, Suspense } from 'react';\nimport Image from '../components/image/NoFoto.jpg';\nimport BackLink from 'components/backlink/BackLink';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmDetail, setFilmDetail] = useState();\n  const location = useLocation();\n  console.log(location.state)\n\n\n  \n  const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\n  const originUrl = 'https://api.themoviedb.org/3/';\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n\n const searchFilmById = () => {\n    fetch(`${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFilmDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n      searchFilmById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      <BackLink />\n      {filmDetail && (\n        <div>\n          {filmDetail.poster_path ? <img\n            src={`${baseImageUrl}${filmDetail.poster_path}`}\n            alt={filmDetail.title}\n          /> :  <img src={Image} alt=\"No foto\"/>}\n          \n          <p>\n            {filmDetail.title}\n            {filmDetail.release_date ? (\n              <span> ({filmDetail.release_date.slice(0, 4)})</span>\n            ) : (\n              <span> (----)</span>\n            )}\n          </p>\n          <p>\n            User score: {Number.parseInt(filmDetail.vote_average * 10)} &#37;\n          </p>\n          <p>\n            Overview:{filmDetail.overview}\n          </p>\n          <p>\n            Genres:\n            {filmDetail.genres.map(genre => (\n              <span> {genre.name} </span>\n            ))}\n          </p>\n        </div>\n      )}\n      <ul>\n        <li><Link to=\"cast\" state={{from: location.state.from}}>Cast</Link></li>\n        <li><Link to=\"reviews\" state={{from: location.state.from}}>Reviews</Link></li>\n      </ul>\n\n      {/* <Cast />\n        <Reviews /> */}\n        <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n        </Suspense>\n    \n      \n    </section>\n  );\n};\n\nexport default MovieDetails;"],"names":["location","useLocation","console","log","to","state","from","params","useParams","paramsId","Number","moviesId","useState","filmDetail","setFilmDetail","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","poster_path","src","alt","title","Image","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}