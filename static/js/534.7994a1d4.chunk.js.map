{"version":3,"file":"static/js/534.7994a1d4.chunk.js","mappings":"4OAAQA,EAASC,EAAQ,IAAjBD,KASR,EAPiB,SAAC,GAAa,IAAZE,EAAW,EAAXA,MAEf,OADAC,QAAQC,IAAIF,IAER,SAACF,EAAD,CAAMK,GAAIH,EAAV,qBAEP,ECwFD,EAxFqB,WACnB,IAAMI,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOI,UAC/B,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MACjBjB,QAAQC,IAAIY,GAGZb,QAAQC,IAAIE,EAAOI,UACnBP,QAAQC,IAAII,GACZL,QAAQC,IAAIQ,GACZT,QAAQC,IAAIW,GACZZ,QAAQC,IAAIa,GACdd,QAAQC,IAAIe,GAyBV,OALAE,EAAAA,EAAAA,YAAU,WAXRC,MAAM,GAAD,OANW,gCAMX,iBAAsBd,EAAtB,oBAPU,mCAOV,oBACFe,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIjB,EAAciB,EAAlB,IACZC,OAAM,SAAAC,GAAK,OAAI7B,QAAQC,IAAI4B,EAAhB,GAMf,GAAE,KAGD,gCACE,SAAC,EAAD,CAAU9B,MAAM,MACfU,IACC,2BAC8B,KAA3BA,EAAWqB,aAAqB,gBAC/BC,IAAG,UA3BQ,oCA2BR,OAAoBtB,EAAWqB,aAClCE,IAAKvB,EAAWwB,SACZ,gBAAKF,IAAKG,EAAOF,IAAI,aAE3B,yBACGvB,EAAWwB,MACXxB,EAAW0B,cACV,iCAAS1B,EAAW0B,aAAaC,MAAM,EAAG,GAA1C,QAEA,0CAGJ,wCACe9B,OAAO+B,SAAmC,GAA1B5B,EAAW6B,cAD1C,SAGA,qCACY7B,EAAW8B,aAEvB,mCAEG9B,EAAW+B,OAAOC,KAAI,SAAAC,GAAK,OAC1B,gCAAQA,EAAMC,KAAd,MAD0B,WAMlC,2BACE,yBAAI,SAAC,EAAA9C,KAAD,CAAMK,GAAG,OAAT,qBACJ,yBAAI,SAAC,EAAAL,KAAD,CAAMK,GAAG,UAAT,2BAKJ,SAAC,EAAA0C,SAAD,CAAUC,UAAU,sCAApB,UACI,SAAC,KAAD,QAMX,C","sources":["components/backlink/BackLink.js","page/MovieDetails.js"],"sourcesContent":["const { Link } = require(\"react-router-dom\")\n\nconst BackLink = ({value}) => {\n    console.log(value)\n    return (\n        <Link to={value}> Go back</Link>\n    )\n}\n\nexport default BackLink;","import { Link, Outlet, useLocation, useParams, useSearchParams } from 'react-router-dom';\n// import { Cast } from '../components/cast/Cast';\n// import { Reviews } from 'components/reviews/Reviews';\nimport { useState, useEffect, Suspense } from 'react';\nimport Image from '../components/image/NoFoto.jpg';\nimport BackLink from 'components/backlink/BackLink';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmDetail, setFilmDetail] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const location = useLocation();\n  console.log(setSearchParams)\n  \n\n  console.log(params.moviesId);\n  console.log(paramsId);\n  console.log(filmDetail);\n  console.log(searchParams);\n  console.log(query);\nconsole.log(location)\n\n  const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\n  const originUrl = 'https://api.themoviedb.org/3/';\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  // const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const searchFilmById = () => {\n    fetch(`${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFilmDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n      searchFilmById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      <BackLink value=\"/\"/>\n      {filmDetail && (\n        <div>\n          {filmDetail.poster_path !== \"\" ? <img\n            src={`${baseImageUrl}${filmDetail.poster_path}`}\n            alt={filmDetail.title}\n          /> :  <img src={Image} alt=\"No foto\"/>}\n          \n          <p>\n            {filmDetail.title}\n            {filmDetail.release_date ? (\n              <span> ({filmDetail.release_date.slice(0, 4)})</span>\n            ) : (\n              <span> (----)</span>\n            )}\n          </p>\n          <p>\n            User score: {Number.parseInt(filmDetail.vote_average * 10)} &#37;\n          </p>\n          <p>\n            Overview:{filmDetail.overview}\n          </p>\n          <p>\n            Genres:\n            {filmDetail.genres.map(genre => (\n              <span> {genre.name} </span>\n            ))}\n          </p>\n        </div>\n      )}\n      <ul>\n        <li><Link to=\"cast\">Cast</Link></li>\n        <li><Link to=\"reviews\">Reviews</Link></li>\n      </ul>\n\n      {/* <Cast />\n        <Reviews /> */}\n        <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n        </Suspense>\n    \n      \n    </section>\n  );\n};\n\nexport default MovieDetails;"],"names":["Link","require","value","console","log","to","params","useParams","paramsId","Number","moviesId","useState","filmDetail","setFilmDetail","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","poster_path","src","alt","title","Image","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}