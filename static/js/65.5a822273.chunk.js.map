{"version":3,"file":"static/js/65.5a822273.chunk.js","mappings":"2LAiFA,UA7Ee,WACb,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAYZE,QAAQC,IAAIL,GACZI,QAAQC,IAAIP,GA6BZ,OARAQ,EAAAA,EAAAA,YAAU,WAhBe,IAAAC,EAiBG,KAAtBP,EAAWQ,SAERJ,QAAQC,IAAI,GAnBIE,EAoBNP,EAnBjBS,MAAM,GAAD,OAHW,gCAGX,gCAJU,mCAIV,kBACmDF,EADnD,oBAGFG,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBlB,EAAckB,EAA/B,IACLC,OAAM,SAAAC,GAAK,OAAIf,QAAQC,IAAIc,EAAhB,IAUdlB,EAAc,IACf,GAAE,CAACD,KAGF,iCACE,0BACE,kBAAMoB,SA3CmB,SAAAC,GAC7BA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASlB,KAAKmB,MAC3B,KAAtBH,EAAWf,QAIfP,EAAcsB,EAAWf,QACzBa,EAAMG,cAAcC,SAASlB,KAAKmB,MAAQ,IAJxCL,EAAMG,cAAcC,SAASlB,KAAKmB,MAAQ,EAK7C,EAkCK,WACE,kBAEEnB,KAAK,OACLoB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,mBAAQH,KAAK,SAAb,UACE,6CAIN,0BACE,wBACG7B,EAAWiC,KAAI,SAAAC,GAAI,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAA1B,SAAiCF,EAAKG,SAD/BH,EAAKE,GADI,UAS7B,C","sources":["page/Movies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const location = useLocation();\n  console.log(location);\n\n  const handleSubmitSearchFilm = event => {\n    event.preventDefault();\n    const firstValue = event.currentTarget.elements.name.value;\n    if (firstValue.trim() === '') {\n      event.currentTarget.elements.name.value = '';\n      return;\n    }\n    setSearchName(firstValue.trim());\n    event.currentTarget.elements.name.value = '';\n  };\n  console.log(searchName);\n  console.log(searchFilm);\n\n  const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\n  const originUrl = 'https://api.themoviedb.org/3/';\n\n  const searchFilmByName = name => {\n    fetch(\n      `${originUrl}search/movie?api_key=${KEY_FILM}&query=${name}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(({ results }) => setSearchFilm(results))\n      .catch(error => console.log(error));\n  };\n\n  // searchFilmByName(searchName);\n\n  useEffect(() => {\n    if (searchName.trim() === '') {\n      return;\n    } else console.log(1);\n    searchFilmByName(searchName);\n    setSearchName('');\n  }, [searchName]);\n\n  return (\n    <>\n      <div>\n        <form onSubmit={handleSubmitSearchFilm}>\n          <input\n            // onChange={handleSearchFilm}\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n          />\n\n          <button type=\"submit\">\n            <span>Search</span>\n          </button>\n        </form>\n      </div>\n      <div>\n        <ul>\n          {searchFilm.map(film => (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`}>{film.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;"],"names":["useState","searchFilm","setSearchFilm","searchName","setSearchName","location","useLocation","console","log","useEffect","name","trim","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","onSubmit","event","preventDefault","firstValue","currentTarget","elements","value","type","autoComplete","autoFocus","placeholder","map","film","to","id","title"],"sourceRoot":""}