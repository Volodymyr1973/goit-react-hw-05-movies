{"version":3,"file":"static/js/787.59f6ea1e.chunk.js","mappings":"uNAAO,IAAMA,EAAW,mCACXC,EAAY,gCACZC,EAAe,kC,2ICAdC,EAAa,SAACC,EAAOC,EAAUC,GAEzCC,MAAM,GAAD,OACAN,EAAAA,GADA,iBACkBI,EADlB,YAC8BD,EAD9B,oBAC+CJ,EAAAA,GAD/C,oBAGFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIT,EAAOS,EAAX,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,EAEYG,EAAY,SAACC,GACxBd,MAAM,GAAD,OAAIN,EAAAA,GAAJ,uCAA4CD,EAAAA,GAA5C,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBM,EAAYN,EAA7B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEWK,EAAiB,SAACjB,EAAUkB,GACtChB,MAAM,GAAD,OAAIN,EAAAA,GAAJ,iBAAsBI,EAAtB,oBAA0CL,EAAAA,GAA1C,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIQ,EAAcR,EAAlB,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYO,EAAmB,SAACC,EAAOC,EAAMC,GAC5CpB,MAAM,GAAD,OACAN,EAAAA,GADA,gCACiCD,EAAAA,GADjC,YAC6CyB,GAD7C,OACqDC,EADrD,oBAGFlB,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBY,EAAcZ,EAA/B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,C,6ECzBH,UAxBgB,WACd,IAAMW,GAASC,EAAAA,EAAAA,MACTxB,EAAWyB,OAAOF,EAAOG,UAC/B,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACPhC,EAAAA,EAAAA,IAAW,UAAWE,EAAU6B,EAElC,GAAE,KAGD,6BACGD,IAAe,wBACbA,EAAYlB,QAAQqB,OAAS,EAAIH,EAAYlB,QAAQsB,KAAI,SAAAC,GAAM,OAC9D,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAD8C,KAK3D,wEAIZ,C","sources":["components/constants/Constants.js","components/fetch/Fetch.js","components/reviews/Reviews.js"],"sourcesContent":["export const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\nexport const originUrl = 'https://api.themoviedb.org/3/';\nexport const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';","import { KEY_FILM, originUrl } from '../constants/Constants'\n \n export const SearchFilm = (value, paramsId, setFoo) => {\n   \n    fetch(\n      `${originUrl}movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFoo(results))\n      .catch(error => console.log(error));\n      \n  };\n\n export  const trendFilm = (setFilmList) => {\n    fetch(`${originUrl}trending/movie/week?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(({ results }) => setFilmList(results))\n      .catch(error => console.log(error));\n  };\n\n export const searchFilmById = (paramsId, setFilmDetail) => {\n    fetch(`${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFilmDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  export const searchFilmByName = (query, name, setSearchFilm) => {\n    fetch(\n      `${originUrl}search/movie?api_key=${KEY_FILM}&${query}${name}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(({ results }) => setSearchFilm(results))\n      .catch(error => console.log(error));\n  };","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SearchFilm } from \"components/fetch/Fetch\";\n\n\nconst Reviews = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmReviews, setFilmReviews] = useState();\n \n  useEffect(() => {\n     SearchFilm(\"reviews\", paramsId, setFilmReviews);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      {filmReviews && <ul>\n        {filmReviews.results.length > 0 ? filmReviews.results.map(result => (\n          <li key={result.id}>\n            <p>{result.author}</p>\n            <p>{result.content}</p>\n          </li>\n        )) : <li>We don't have any reviews for this movie</li>}\n      </ul>}      \n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["KEY_FILM","originUrl","baseImageUrl","SearchFilm","value","paramsId","setFoo","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","console","log","trendFilm","setFilmList","searchFilmById","setFilmDetail","searchFilmByName","query","name","setSearchFilm","params","useParams","Number","moviesId","useState","filmReviews","setFilmReviews","useEffect","length","map","result","author","content","id"],"sourceRoot":""}