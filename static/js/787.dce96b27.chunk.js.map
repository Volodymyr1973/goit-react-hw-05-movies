{"version":3,"file":"static/js/787.dce96b27.chunk.js","mappings":"+LAAO,IAAMA,EAAW,mCAEXC,EAAe,kC,mICA5B,E,OAAeC,EAAAA,OAAa,CAC1BC,QAAQ,kC,SCCIC,EAAa,SAACC,EAAOC,GACjC,IAAMC,EAAM,gBAAYD,EAAZ,YAAwBD,EAAxB,oBAAyCL,EAAAA,GAAzC,mBACZ,OAAOQ,EAAAA,IAAQD,EAEd,EAEYE,EAAY,WAEzB,IAAMF,EAAM,sCAAkCP,EAAAA,GAAlC,mBACZ,OAAOQ,EAAAA,IAAQD,EAEd,EAEWG,EAAiB,SAACJ,GAE9B,IAAMC,EAAM,gBAAYD,EAAZ,oBAAgCN,EAAAA,GAAhC,mBACZ,OAAOQ,EAAAA,IAAQD,EAEd,EAEYI,EAAmB,SAACC,GAE/B,IAAML,EAAM,+BAA2BP,EAAAA,GAA3B,kBAA6CY,EAA7C,mBACZ,OAAOJ,EAAAA,IAAQD,EAGhB,C,8ECDH,UAxBgB,WACd,IAAMM,GAASC,EAAAA,EAAAA,MACTR,EAAWS,OAAOF,EAAOG,UAC/B,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACPhB,EAAAA,EAAAA,IAAW,UAAWE,GAAUe,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYH,EAAeG,EAA3B,IAAkCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEpF,GAAE,KAGD,6BACGN,IAAe,wBACbA,EAAYS,QAAQC,OAAS,EAAIV,EAAYS,QAAQE,KAAI,SAAAC,GAAM,OAC9D,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAD8C,KAK3D,wEAIZ,C","sources":["components/constants/Constants.js","components/Api.js","components/fetch/Fetch.js","components/reviews/Reviews.js"],"sourcesContent":["export const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\nexport const originUrl = 'https://api.themoviedb.org/3/';\nexport const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `https://api.themoviedb.org/3/`\n});","// import axios from 'axios';\nimport API from '../Api'\nimport { KEY_FILM } from '../constants/Constants';\n \n export const SearchFilm = (value, paramsId ) => {\n  const apiUrl = `movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl);\n\n  };\n\n export  const trendFilm = () => {\n    \n  const apiUrl = `trending/movie/week?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl)\n  \n  };\n\n export const searchFilmById = (paramsId) => {\n\n  const apiUrl = `movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`;\n  return API.get(apiUrl)\n  \n  };\n\n  export const searchFilmByName = (name) => {\n\n    const apiUrl = `search/movie?api_key=${KEY_FILM}&query=${name}&language=en-US`;\n    return API.get(apiUrl);\n  \n\n  };","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SearchFilm } from \"components/fetch/Fetch\";\n\n\nconst Reviews = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmReviews, setFilmReviews] = useState();\n \n  useEffect(() => {\n     SearchFilm(\"reviews\", paramsId).then(({data}) => setFilmReviews(data)).catch(error => console.log(error));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      {filmReviews && <ul>\n        {filmReviews.results.length > 0 ? filmReviews.results.map(result => (\n          <li key={result.id}>\n            <p>{result.author}</p>\n            <p>{result.content}</p>\n          </li>\n        )) : <li>We don't have any reviews for this movie</li>}\n      </ul>}      \n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["KEY_FILM","baseImageUrl","axios","baseURL","SearchFilm","value","paramsId","apiUrl","API","trendFilm","searchFilmById","searchFilmByName","name","params","useParams","Number","moviesId","useState","filmReviews","setFilmReviews","useEffect","then","data","catch","error","console","log","results","length","map","result","author","content","id"],"sourceRoot":""}