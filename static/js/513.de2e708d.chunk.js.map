{"version":3,"file":"static/js/513.de2e708d.chunk.js","mappings":"uNAAO,IAAMA,EAAW,mCACXC,EAAY,gCACZC,EAAe,kC,2ICCdC,EAAa,SAACC,EAAOC,EAAUC,GAEvCC,MAAM,GAAD,OACFN,EAAAA,GADE,iBACgBI,EADhB,YAC4BD,EAD5B,oBAC6CJ,EAAAA,GAD7C,oBAGJQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIT,EAAOS,EAAX,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,EAEYG,EAAY,SAACC,GACxBd,MAAM,GAAD,OAAIN,EAAAA,GAAJ,uCAA4CD,EAAAA,GAA5C,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBM,EAAYN,EAA7B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEWK,EAAiB,SAACjB,EAAUkB,GACtChB,MAAM,GAAD,OAAIN,EAAAA,GAAJ,iBAAsBI,EAAtB,oBAA0CL,EAAAA,GAA1C,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIQ,EAAcR,EAAlB,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYO,EAAmB,SAACC,EAAOC,EAAMC,GAC5CpB,MAAM,GAAD,OACAN,EAAAA,GADA,gCACiCD,EAAAA,GADjC,YAC6CyB,GAD7C,OACqDC,EADrD,oBAGFlB,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBY,EAAcZ,EAA/B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,C,4ECvBH,UA3Ba,WACX,OAAgCW,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBR,EAAjB,KAEMS,EAAW,SAAAC,GACf,OAAIA,EAAKC,MACAD,EAAKC,MACAD,EAAKL,IACpB,EAMD,OAJAO,EAAAA,EAAAA,YAAU,YACVb,EAAAA,EAAAA,IAAUC,EACT,GAAE,KAGD,iCACA,4CACE,wBACGQ,EAASK,KAAI,SAAAH,GAAI,OAChB,yBACE,SAAC,KAAD,CAAMI,GAAE,iBAAYJ,EAAKK,IAAMC,MAAO,CAACC,KAAM,SAA7C,SAAwDR,EAASC,MAD1DA,EAAKK,GADE,QAQzB,C","sources":["components/constants/Constants.js","components/fetch/Fetch.js","page/Home.js"],"sourcesContent":["export const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\nexport const originUrl = 'https://api.themoviedb.org/3/';\nexport const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';","// import axios from 'axios'\nimport { KEY_FILM, originUrl } from '../constants/Constants'\n \n export const SearchFilm = (value, paramsId, setFoo) => {\n\n      fetch(\n      `${originUrl}movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFoo(results))\n      .catch(error => console.log(error));\n      \n  };\n\n export  const trendFilm = (setFilmList) => {\n    fetch(`${originUrl}trending/movie/week?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(({ results }) => setFilmList(results))\n      .catch(error => console.log(error));\n  };\n\n export const searchFilmById = (paramsId, setFilmDetail) => {\n    fetch(`${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(results => setFilmDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  export const searchFilmByName = (query, name, setSearchFilm) => {\n    fetch(\n      `${originUrl}search/movie?api_key=${KEY_FILM}&${query}${name}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Insert other name'));\n      })\n      .then(({ results }) => setSearchFilm(results))\n      .catch(error => console.log(error));\n  };","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { trendFilm} from 'components/fetch/Fetch';\n// import { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [filmList, setFilmList] = useState([]);\n  \n  const nameFilm = film => {\n    if (film.title) {\n      return film.title;\n    } else return film.name;\n  };\n\n  useEffect(() => {\n  trendFilm(setFilmList);\n  }, []);\n\n  return (\n    <>\n    <h2>Trending today</h2>\n      <ul>\n        {filmList.map(film => (\n          <li key={film.id}>\n            <Link to={`movies/${film.id}`} state={{from: \"/home\"}}>{nameFilm(film)}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;"],"names":["KEY_FILM","originUrl","baseImageUrl","SearchFilm","value","paramsId","setFoo","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","console","log","trendFilm","setFilmList","searchFilmById","setFilmDetail","searchFilmByName","query","name","setSearchFilm","useState","filmList","nameFilm","film","title","useEffect","map","to","id","state","from"],"sourceRoot":""}