{"version":3,"file":"static/js/787.5eed47ac.chunk.js","mappings":"uNAAO,IAAMA,EAAW,mCACXC,EAAY,gCACZC,EAAe,kC,oJCCdC,EAAa,SAACC,EAAOC,EAAUC,GAE3C,IAAMC,EAAM,UAAMN,EAAAA,GAAN,iBAAwBI,EAAxB,YAAoCD,EAApC,oBAAqDJ,EAAAA,GAArD,mBACZQ,EAAAA,EAAAA,IAAUD,GAAQE,MAAK,SAACC,GACtB,IAAMC,EAAaD,EAAKE,KACxBN,EAAOK,EACR,GAEA,EAEYE,EAAY,SAACC,GAE1B,IAAMP,EAAM,UAAMN,EAAAA,GAAN,uCAA8CD,EAAAA,GAA9C,mBACZQ,EAAAA,EAAAA,IAAUD,GAAQE,MAAK,SAACC,GACtB,IAAMC,EAAaD,EAAKE,KAAKG,QAC7BD,EAAYH,EAEb,GAEA,EAEWK,EAAiB,SAACX,EAAUY,GAExC,IAAMV,EAAM,UAAMN,EAAAA,GAAN,iBAAwBI,EAAxB,oBAA4CL,EAAAA,GAA5C,mBACZQ,EAAAA,EAAAA,IAAUD,GAAQE,MAAK,SAACC,GACtB,IAAMC,EAAaD,EAAKE,KACxBK,EAAcN,EACf,GAGA,EAEYO,EAAmB,SAACC,EAAOC,EAAMC,GAE5C,IAAMd,EAAM,UAAMN,EAAAA,GAAN,gCAAuCD,EAAAA,GAAvC,YAAmDmB,GAAnD,OAA2DC,EAA3D,mBACZZ,EAAAA,EAAAA,IAAUD,GAAQE,MAAK,SAACC,GACtB,IAAMC,EAAaD,EAAKE,KAAKG,QAC7BM,EAAcV,EACf,GAEF,C,6ECdH,UAxBgB,WACd,IAAMW,GAASC,EAAAA,EAAAA,MACTlB,EAAWmB,OAAOF,EAAOG,UAC/B,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACP1B,EAAAA,EAAAA,IAAW,UAAWE,EAAUuB,EAElC,GAAE,KAGD,6BACGD,IAAe,wBACbA,EAAYZ,QAAQe,OAAS,EAAIH,EAAYZ,QAAQgB,KAAI,SAAAC,GAAM,OAC9D,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAD8C,KAK3D,wEAIZ,C","sources":["components/constants/Constants.js","components/fetch/Fetch.js","components/reviews/Reviews.js"],"sourcesContent":["export const KEY_FILM = '0402ef8c6d0b2370fa6ac2b572dad398';\nexport const originUrl = 'https://api.themoviedb.org/3/';\nexport const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';","import axios from 'axios'\nimport { KEY_FILM, originUrl } from '../constants/Constants'\n \n export const SearchFilm = (value, paramsId, setFoo) => {\n\n  const apiUrl = `${originUrl}movie/${paramsId}/${value}?api_key=${KEY_FILM}&language=en-US`;\n  axios.get(apiUrl).then((resp) => {\n    const allPersons = resp.data;\n    setFoo(allPersons);\n  });\n\n  };\n\n export  const trendFilm = (setFilmList) => {\n    \n  const apiUrl = `${originUrl}trending/movie/week?api_key=${KEY_FILM}&language=en-US`;\n  axios.get(apiUrl).then((resp) => {\n    const allPersons = resp.data.results;\n    setFilmList(allPersons);\n    // console.log(allPersons)\n  });\n  \n  };\n\n export const searchFilmById = (paramsId, setFilmDetail) => {\n\n  const apiUrl = `${originUrl}movie/${paramsId}?api_key=${KEY_FILM}&language=en-US`;\n  axios.get(apiUrl).then((resp) => {\n    const allPersons = resp.data;\n    setFilmDetail(allPersons);\n  });\n\n \n  };\n\n  export const searchFilmByName = (query, name, setSearchFilm) => {\n\n    const apiUrl = `${originUrl}search/movie?api_key=${KEY_FILM}&${query}${name}&language=en-US`;\n    axios.get(apiUrl).then((resp) => {\n      const allPersons = resp.data.results;\n      setSearchFilm(allPersons);\n    });\n\n  };","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SearchFilm } from \"components/fetch/Fetch\";\n\n\nconst Reviews = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [filmReviews, setFilmReviews] = useState();\n \n  useEffect(() => {\n     SearchFilm(\"reviews\", paramsId, setFilmReviews);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      {filmReviews && <ul>\n        {filmReviews.results.length > 0 ? filmReviews.results.map(result => (\n          <li key={result.id}>\n            <p>{result.author}</p>\n            <p>{result.content}</p>\n          </li>\n        )) : <li>We don't have any reviews for this movie</li>}\n      </ul>}      \n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["KEY_FILM","originUrl","baseImageUrl","SearchFilm","value","paramsId","setFoo","apiUrl","axios","then","resp","allPersons","data","trendFilm","setFilmList","results","searchFilmById","setFilmDetail","searchFilmByName","query","name","setSearchFilm","params","useParams","Number","moviesId","useState","filmReviews","setFilmReviews","useEffect","length","map","result","author","content","id"],"sourceRoot":""}